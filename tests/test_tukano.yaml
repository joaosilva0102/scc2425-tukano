config:
  target: http://127.0.0.1/rest
  plugins:
    metrics-by-endpoint: { } # Used to get metrics for each endpoint individually.

  phases:
    - name: "Warm-up phase"
      duration: 10
      arrivalRate: 1
      rampTo: 5

    - name: "Steady phase"
      duration: 10
      arrivalRate: 5
      rampTo: 10

    - name: "Peak phase"
      duration: 5
      arrivalRate: 10
      rampTo: 20

  processor: ./test-utils.js  # JavaScript file for custom functions

scenarios:
  - name: 'User Tests'
    flow:
      - post: # Create User
          url: /users/
          headers:
            Content-Type: application/json
            Accept: application/json
          beforeRequest: "uploadRandomizedUser"
          afterResponse: "processRegisterReply"
      - get: # Get User
          url: "/users/{{ username }}?pwd={{ password }}"
          headers:
            Content-Type: application/json
            Accept: application/json
          beforeRequest: "getRandomUser"
      - put: # Update User
          url: "/users/{{ username }}?pwd={{ password }}"
          headers:
            Content-Type: application/json
            Accept: application/json
          beforeRequest: "updateRandomUser"
          afterRequest: "processUpdateUser"
      - get: # Search Users
          url: "/users?query={{ pattern }}"
          headers:
            Content-Type: application/json
            Accept: application/json
          beforeRequest: "randomPattern"
      - post: # Create Short
          url: "/shorts/{{ username }}?pwd={{ password }}"
          headers:
            Accept: application/json
          beforeRequest: "getRandomUser"
          afterResponse: "processShortReply"
      - get: # Get Short
          url: "/shorts/{{ shortId }}"
          headers:
            Accept: application/json
          beforeRequest: "getRandomShort"
      - get: # Get Shorts
          url: "/shorts/{{ username }}/shorts"
          headers:
            Accept: application/json
          beforeRequest: "getRandomUser"
      - get: # Get Likes
          url: "/shorts/{{ shortId }}/likes?pwd={{ password }}"
          headers:
            Accept: application/json
          beforeRequest: "getRandomShortAndOwner"
      - get: # Get Followers
          url: "/shorts/{{ username }}/followers?pwd={{ password }}"
          headers:
            Accept: application/json
          beforeRequest: "getRandomUser"
      - get: # Get Feed
          url: "/shorts/{{ username }}/feed?pwd={{ password }}"
          headers:
            Accept: application/json
          beforeRequest: "getRandomUser"
      - delete: # Delete Short
          url: "/shorts/{{ shortId }}?pwd={{ password }}"
          headers:
            Accept: application/json
          beforeRequest: "getRandomShortAndOwner"
          afterRequest: "processDeleteShort"
      - delete: # Delete User
          url: "/users/{{ username }}?pwd={{ password }}"
          headers:
            Content-Type: application/json
            Accept: application/json
          beforeRequest: "getRandomUser"
          afterRequest: "processDeleteUser"






